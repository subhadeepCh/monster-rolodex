{"version":3,"sources":["components/card-component/card.component.jsx","components/card-list-component/cardList.component.jsx","components/search-box/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchfield","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,OAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJbC,EAAW,SAACR,GACrB,OACA,qBAAKC,UAAU,YAAf,SAEKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNhBM,G,YAAY,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACnC,OACI,uBACAZ,UAAU,SACTa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0DJG,E,kDA3Db,aAAc,IAAD,8BACX,gBACKC,MAAO,CACVR,SAAS,GACTS,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAGvC,WAAS,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACK,sBAAK3B,UAAU,MAAf,UACA,kDAGA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAc,SAACiB,GAAD,OAAK,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAEvD,cAAC,EAAD,CAAUvB,SAAUiB,EAApB,sB,GA7BSO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58d037d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\nexport const Card = (props)=>{\r\n    return(\r\n        <div className='card'>\r\n        <img alt='monsters' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card-component/card.component'\r\nexport const CardList = (props) =>{ \r\n    return(\r\n    <div className='card-list'>\r\n    {\r\n         props.monsters.map(monster=>(\r\n          <Card key={monster.id} monster={monster}></Card>\r\n          ))\r\n    }\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search.css'\r\nexport const SearchBox = ({placeholder,handleChange})=>{\r\n    return(\r\n        <input\r\n        className='search'\r\n         type='search'\r\n         placeholder={placeholder}\r\n         onChange={handleChange}/>\r\n    );\r\n};","import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport {CardList} from './components/card-list-component/cardList.component.jsx';\nimport './App.css';\nimport {SearchBox} from './components/search-box/search.component.jsx'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state ={\n      monsters:[],\n      searchfield:\"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n\n  render(){\n    const {monsters, searchfield } = this.state;\n    const filteredMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchfield.toLowerCase())\n      )\n    return (\n         <div className='App'>\n         <h1>\n         Monsters Rolodex\n         </h1>\n         <SearchBox \n         placeholder='search monsters'\n         handleChange={(e)=>this.setState({searchfield:e.target.value})}\n         />\n         <CardList monsters={filteredMonsters}> </CardList>         \n         </div>\n        );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           I AM SUBHADEEP\n//         </p>\n        \n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}